#pragma once

namespace PacketType
{
	enum : byte
	{
		Failure,
		CreateSuccess,
		Create,
		PlayerShoot,
		Move,
		PlayerText,
		Text,
		ServerPlayerShoot,
		Damage,
		Update,
		UpdateAck,
		Notification,
		NewTick,
		InvSwap,
		UseItem,
		ShowEffect,
		Hello,
		Goto,
		InvDrop,
		InvResult,
		Reconnect,
		Ping,
		Pong,
		MapInfo,
		Load,
		Pic,
		SetCondition,
		Teleport,
		UsePortal,
		Death,
		Buy,
		BuyResult,
		Aoe,
		GroundDamage,
		PlayerHit,
		EnemyHit,
		AoeAck,
		ShootAck,
		OtherHit,
		SquareHit,
		GotoAck,
		EditAccountList,
		AccountList,
		QuestObjId,
		ChooseName,
		NameResult,
		CreateGuild,
		GuildResult,
		GuildRemove,
		GuildInvite,
		AllyShoot,
		EnemyShoot,
		RequestTrade,
		TradeRequested,
		TradeStart,
		ChangeTrade,
		TradeChanged,
		AcceptTrade,
		CancelTrade,
		TradeDone,
		TradeAccepted,
		ClientStat,
		CheckCredits,
		Escape,
		File,
		InvitedToGuild,
		JoinGuild,
		ChangeGuildRank,
		PlaySound,
		GlobalNotification,
		Reskin,
		PetUpgradeRequest,
		ActivePetUpdateRequest,
		ActivePetUpdate,
		NewAbilityUnlocked,
		PetYardUpdate,
		PetEvolved,
		PetDeleted,
		PetHatched,
		EnterArena,
		ArenaNextWave,
		ArenaDeath,
		AcceptArenaDeath,
		VerifyEmail,
		ReskinUnlock,
		PasswordPrompt,
		FetchQuest,
		QuestRedeem,
		FetchQuestResponse,
		QuestRedeemResponse,
		ReskinPet,
		KeyInfoRequest,
		KeyInfoResponse,
		ClaimLoginReward,
		ClaimLoginRewardResponse,
		GotoQuestRoom,
		ChangePetSkin,
		NUM_PACKETS
	};
}

namespace Server
{
	enum : byte
	{
		USEast,
		AsiaSouthEast,
		USSouth,
		USSouthWest,
		USEast2,
		USNorthWest,
		AsiaEast,
		EUSouthWest,
		USSouth2,
		EUNorth2,
		EUSouth,
		USSouth3,
		EUWest2,
		USMidWest,
		EUWest,
		USEast3,
		USWest,
		USWest3,
		USMidWest2,
		EUEast,
		Australia,
		EUNorth,
		USWest2,
		NUM_SERVERS
	};
}

namespace Modifier
{
	enum : byte
	{
		None = 0,
		Shift = 1,
		Control = 2,
		Alt = 4,
		Any = 8
	};
}

namespace Class
{
	enum
	{
		Rogue = 0x0300,
		Archer = 0x0307,
		Wizard = 0x030e,
		Priest = 0x0310,
		Warrior = 0x031d,
		Knight = 0x031e,
		Paladin = 0x031f,
		Assassin = 0x0320,
		Necromancer = 0x0321,
		Huntress = 0x0322,
		Mystic = 0x0323,
		Trickster = 0x0324,
		Sorcerer = 0x0325,
		Ninja = 0x0326,
		Samurai = 0x0311
	};
}

namespace SlotType
{
	enum : byte
	{
		Sword = 1,
		Dagger = 2,
		Bow = 3,
		Tome = 4,
		Shield = 5,
		LeatherArmor = 6,
		HeavyArmor = 7,
		Wand = 8,
		Ring = 9,
		Inventory = 10,
		Spell = 11,
		Seal = 12,
		Cloak = 13,
		Robe = 14,
		Quiver = 15,
		Helm = 16,
		Staff = 17,
		Poison = 18,
		Skull = 19,
		Trap = 20,
		Orb = 21,
		Prism = 22,
		Scepter = 23,
		Katana = 24,
		Shuriken = 25,
		Egg = 26,
		Wakizashi = 27
	};
}

namespace Ability
{
	enum
	{
		AttackClose = 402,
		AttackMid = 404,
		AttackFar = 405,
		Electric = 406,
		Heal = 407,
		MagicHeal = 408,
		Savage = 409,
		Decoy = 410,
		RisingFury = 411
	};
}

namespace Bag
{
	enum
	{
		Brown = 0x500,
		BrownBoosted = 0x6ad,
		Pink = 0x506,
		PinkBoosted = 0x6ae,
		Purple = 0x507,
		PurpleBoosted = 0x6ba,
		Egg = 0x508,
		EggBoosted = 0x6bb,
		Gold = 0x050E,
		GoldBoosted = 0x6bc,
		Cyan = 0x509,
		CyanBoosted = 0x6bd,
		Blue = 0x050B,
		BlueBoosted = 0x6be,
		Orange = 0x50F,
		OrangeBoosted = 0x6bf,
		Red = 0x6AC,
		RedBoosted = 0x6c0,
		White = 0x050C,
		WhiteBoosted = 0x0510
	};
}

namespace EffectType
{
	enum
	{
		Unknown = 0,
		Heal = 1,
		Teleport = 2,
		Stream = 3,
		Throw = 4,
		Nova = 5,
		Poison = 6,
		Line = 7,
		Burst = 8,
		Flow = 9,
		Ring = 10,
		Lightning = 11,
		Collapse = 12,
		ConeBlast = 13,
		Jitter = 14,
		Flash = 15,
		ThrowProjectile = 16,
		Shocker = 17,
		Shockee = 18,
		RisingFury = 19,
		NovaNoAOE = 20
	};
}

namespace ConditionEffect
{
	enum : byte
	{
		Dead = 0,
		Quiet = 1,
		Weak = 2,
		Slowed = 3,
		Sick = 4,
		Dazed = 5,
		Stunned = 6,
		Blind = 7,
		Hallucinating = 8,
		Drunk = 9,
		Confused = 10,
		StunImmume = 11,
		Invisible = 12,
		Paralyzed = 13,
		Speedy = 14,
		Bleeding = 15,
		NotUsed = 16,
		Healing = 17,
		Damaging = 18,
		Berserk = 19,
		Paused = 20,
		Stasis = 21,
		StasisImmune = 22,
		Invincible = 23,
		Invulnerable = 24,
		Armored = 25,
		ArmorBroken = 26,
		Hexed = 27,
		NinjaSpeedy = 28,
		Unstable = 29,
		Darkness = 30,
		SlowedImmune = 31,
		DazedImmune = 32,
		ParalyzedImmune = 33,
		Petrified = 34,
		PetrifiedImmune = 35,
		PetEffectIcon = 36,
		Curse = 37,
		CurseImmune = 38,
		HPBoost = 39,
		MPBoost = 40,
		AttBoost = 41,
		DefBoost = 42,
		SpdBoost = 43,
		VitBoost = 44,
		WisBoost = 45,
		DexBoost = 46,
		Silenced = 47,
		Exposed = 59,
		GroundDamage = 98
	};
}

namespace Stat
{
	enum : byte
	{
		MaximumHP = 0,
		HP = 1,
		Size = 2,
		MaximumMP = 3,
		MP = 4,
		NextLevelExperience = 5,
		Experience = 6,
		Level = 7,
		Inventory0 = 8,
		Inventory1 = 9,
		Inventory2 = 10,
		Inventory3 = 11,
		Inventory4 = 12,
		Inventory5 = 13,
		Inventory6 = 14,
		Inventory7 = 15,
		Inventory8 = 16,
		Inventory9 = 17,
		Inventory10 = 18,
		Inventory11 = 19,
		Attack = 20,
		Defense = 21,
		Speed = 22,
		Vitality = 26,
		Wisdom = 27,
		Dexterity = 28,
		Effects = 29,
		Stars = 30,
		Name = 31,
		Texture1 = 32,
		Texture2 = 33,
		MerchandiseType = 34,
		Credits = 35,
		MerchandisePrice = 36,
		PortalUsable = 37,
		AccountId = 38,
		AccountFame = 39,
		MerchandiseCurrency = 40,
		ObjectConnection = 41,
		MerchandiseRemainingCount = 42,
		MerchandiseRemainingMinutes = 43,
		MerchandiseDiscount = 44,
		MerchandiseRankRequirement = 45,
		HealthBonus = 46,
		ManaBonus = 47,
		AttackBonus = 48,
		DefenseBonus = 49,
		SpeedBonus = 50,
		VitalityBonus = 51,
		WisdomBonus = 52,
		DexterityBonus = 53,
		OwnerAccountId = 54,
		RankRequired = 55,
		NameChosen = 56,
		CharacterFame = 57,
		CharacterFameGoal = 58,
		Glowing = 59,
		SinkLevel = 60,
		AltTextureIndex = 61,
		GuildName = 62,
		GuildRank = 63,
		OxygenBar = 64,
		XpBoosterActive = 65,
		XpBoostTime = 66,
		LootDropBoostTime = 67,
		LootTierBoostTime = 68,
		HealthPotionCount = 69,
		MagicPotionCount = 70,
		Backpack0 = 71,
		Backpack1 = 72,
		Backpack2 = 73,
		Backpack3 = 74,
		Backpack4 = 75,
		Backpack5 = 76,
		Backpack6 = 77,
		Backpack7 = 78,
		HasBackpack = 79,
		Skin = 80,
		PetInstanceId = 81,
		PetName = 82,
		PetType = 83,
		PetRarity = 84,
		PetMaximumLevel = 85,
		PetFamily = 86,
		PetPoints0 = 87,
		PetPoints1 = 88,
		PetPoints2 = 89,
		PetLevel0 = 90,
		PetLevel1 = 91,
		PetLevel2 = 92,
		PetAbilityType0 = 93,
		PetAbilityType1 = 94,
		PetAbilityType2 = 95,
		Effects2 = 96,
		FortuneTokens = 97
	};
}

namespace Key
{
	enum : byte
	{
		LeftButton = 0x1,
		RightButton,
		MiddleButton = 0x4,
		XButton1,
		XButton2,
		Backspace = 0x8,
		Tab,
		Clear = 0xc,
		Enter,
		Shift = 0x10,
		Control,
		Alt,
		Pause,
		CapsLock,
		Esc = 0x1b,
		Space = 0x20,
		PageUp,
		PageDown,
		End,
		Home,
		Left,
		Up,
		Right,
		Down,
		PrintScreen = 0x2c,
		Insert,
		Delete,
		Key0 = 0x30,
		Key1,
		Key2,
		Key3,
		Key4,
		Key5,
		Key6,
		Key7,
		Key8,
		Key9,
		A = 0x41,
		B,
		C,
		D,
		E,
		F,
		G,
		H,
		I,
		J,
		K,
		L,
		M,
		N,
		O,
		P,
		Q,
		R,
		S,
		T,
		U,
		V,
		W,
		X,
		Y,
		Z,
		LWin,
		RWin,
		Numpad0 = 0x60,
		Numpad1,
		Numpad2,
		Numpad3,
		Numpad4,
		Numpad5,
		Numpad6,
		Numpad7,
		Numpad8,
		Numpad9,
		NumpadMultiply,
		NumpadAdd,
		NumpadSubtract = 0x6d,
		NumpadDecimal,
		NumpadDivide,
		F1,
		F2,
		F3,
		F4,
		F5,
		F6,
		F7,
		F8,
		F9,
		F10,
		F11,
		F12,
		NumLock = 0x90,
		ScrollLock,
		LShift = 0xa0,
		RShift,
		LControl,
		RControl,
		LAlt,
		RAlt,
		Plus = 0xbb,
		Comma,
		Minus,
		Period
	};
}

namespace DataClass
{
	enum : byte
	{
		CharacterData
	};
}